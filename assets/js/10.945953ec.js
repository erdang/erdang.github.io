(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{439:function(n,t,a){"use strict";a.r(t);var e=a(23),s=Object(e.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h3",{attrs:{id:"学习命令行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#学习命令行"}},[n._v("#")]),n._v(" 学习命令行")]),n._v(" "),a("p",[a("strong",[n._v("规则")])]),n._v(" "),a("p",[a("code",[n._v("#")]),n._v(" 代表注释\n"),a("code",[n._v("\\")]),n._v(" 代表转义字符，可以将特殊符号变成一般字符\n"),a("code",[n._v("$")]),n._v(" 代表的是目前这个 Shell 的线程代号，即是所谓的 PID(process ID)，使用"),a("code",[n._v("echo $$")]),n._v("，出现的数字就是 SHELL 的 PID 代码\n"),a("code",[n._v("?")]),n._v(" 是一个特殊的变量，代表上一个执行的命令所回传的值。如果成功执行该命令，则会回传一个 0 值，如果执行过程发生错误，就会回传一个非 0 的值")]),n._v(" "),a("p",[a("strong",[n._v("缩写")]),n._v("`")]),n._v(" "),a("p",[n._v("所谓的命令实际上就是单词的缩写，有以下几种常见缩写方式：\n1、最常见的缩写是取每个单词的首字母")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("cd Change Direcroty 切换目录\n")])])]),a("p",[n._v("2、如果首字母后为"),a("code",[n._v("h")]),n._v("，则保留"),a("code",[n._v("h")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("chmod CHange MODe 切换文件权限\n")])])]),a("p",[n._v("3、 如果只有一个单词，通常取每个音节的首字母")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("cp Copy 文件拷贝\n")])])]),a("p",[n._v("4、取前几个字母作为缩写")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("diff DIFFerences 比较文件差异\n")])])]),a("h3",{attrs:{id:"日常使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日常使用"}},[n._v("#")]),n._v(" 日常使用")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("`tab` 一下 提示 二下自动补全\n`ctrl-r` 搜索命令行历史记录\n`ctrl-w` 删除你键入的最后一个单词\n`ctrl-u` 可以删除行内光标所在位置之前的内容\n`ctrl-a` 可以将光标移至行首\n`ctrl-e` 可以将光标移至行尾\n`ctrl-k` 可以删除光标至行尾的所有内容\n`ctrl-l` 可以清屏\n`cd`命令可以切换工作路径\n`cd .` 当前目录\n`cd ~` 可以进入 home 目录。要访问你的 home 目录中的文件，可以使用前缀 ~（例如 ~/.bashrc）\n`cd ..` 回到上级目录\n`cd -` 回到前一个工作路径\n`pwd` 显示当前工作目录的绝对路径\n`mkdir a` 创建 a 文件夹\n`mkdir -p a/b/c` 创建有层级的目录(a/b/c)，需要使用 -p 选项\n`rmdir` 删除空目录\n`rm -r` 删除目录及该目录下的所有目录及文件\n`rm -rf` 强制删除 `-f`\n`cp -r a b` # 将目录 a 复制到目录 b\n`mv a b` # 将目录 a 从当前目录移动到目录 b 下,如果没有目录 b，则目录 a 重命名为目录 b\n\n依次按下 `ctrl-a`， `#`， `enter` 在行首添加 # 把它当做注释再按下回车执行\n`uptime` 或 `w` 来查看系统已经运行多长时间\n`alias` 来创建常用命令的快捷形式。例如：alias ll='ls -latr' 创建了一个新的命令别名 ll。\n`unalias lm` # 取消别名 lm 的设置\n`open` 可以使用默认方式打开文件\n`ls` # 显示该目录下的所有文件 list files，默认不显示以点开头的文件\n`ls -a` # 显示所有文件，包括隐藏文件\n`ls -l` # 显示每个文件的详细信息\n`ls ./y` # 显示指定路径 `./y` 下的所有文件\n`cat`# 显示文件内容\n`code a.txt` # 使用 vscode 打开 a.txt 文件\n\n`touch a.txt` # 创建空文件 a.txt，如果 a.txt 已经有内容，则修改文件最后更新时间\n`echo`# 输出字符串，也可以新建或改写文件\n`echo 123` # 输入字符串'123'\n`echo -e` '111\\n222' # 输入多行内容，需要使用-e 选项\n`echo 123 > 1.txt` # 将 1.txt 的内容改写为'123'\n`echo abc >> 1.txt` # 向 1.txt 追加内容，则 1.txt 的内容为'123 \\n abc'\n`>`表示覆盖\n`>>` 表示累加\n\n`whereis cat` 搜索该命令的所在路径及帮助文档所在位置\n`which cat` 搜索该命令的所在路径及可存在的别名\n`find [搜索范围] [搜索条件]` 搜索文件,该命令会把所有文件都搜索\n`grep [选项] 字符串 文件名` 该命令是搜索字符串的命令 -i 忽略大小写\n-v 排除指定字符串\n`man` 命令#获取指定命令的帮助\n`man ls`#查看 ls 的帮助\n`ifconfig` # 显示所有网卡和接口信息\n`lsof -i port:80` 哪个程序在使用 80 端口？\n`wget {url}` # 下载文件，可加 --no-check-certificate 忽略 ssl 验证\n`curl -sL {url}` # 同 wget -qO- {url} 没有 wget 的时候使用\n`netstat -a` # 列出所有端口\n`jobs` # 查看所有后台进程（jobs）\n`bg` # 查看后台进程，并切换过去\n`fg` # 切换后台进程到前台\n`fg {job}` # 切换特定后台进程到前台\n`kill {pid}` # 结束进程\n`ps` # 查看当前会话进程\n`sudo vi /etc/host` 编辑 host\nchmod + x mvExl.txt 修改权限\n")])])]),a("h3",{attrs:{id:"命令组合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令组合"}},[n._v("#")]),n._v(" 命令组合")]),n._v(" "),a("p",[n._v("使用多命令执行符和管道符可以实现命令组合的目的")]),n._v(" "),a("p",[n._v("【多命令执行符】")]),n._v(" "),a("p",[n._v("命令 1;命令 2 多个命令顺序执行，命令之间没有任何逻辑关系")]),n._v(" "),a("p",[n._v("命令 1&&命令 2 逻辑与，命令 1 成功，才会执行命令 2")]),n._v(" "),a("p",[n._v("命令 1||命令 2 逻辑或，命令 1 不成功，才会执行命令 2")]),n._v(" "),a("p",[n._v("【管道符】")]),n._v(" "),a("p",[n._v("命令 1 | 命令 2 命令 1 的正确输出作为命令 2 的操作对象")]),n._v(" "),a("p",[n._v("$ ls -al /etc | less\n上面代码中，使用 ls 命令输出后的内容就能够被 less 读取，并利用 less 的功能，就能够前后翻动相关的信息了")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/skywind3000/awesome-cheatsheets/blob/master/languages/bash.sh",target:"_blank",rel:"noopener noreferrer"}},[n._v("bash 速查"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);